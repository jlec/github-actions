---
name: Release Artefacts

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  release-and-clean:
    name: Release the code & clean up
    if: "startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
    env:
      GOPRIVATE: github.com/jlec-go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: {% raw %}${{ github.ref_name }}{% endraw %}
{% if cookiecutter.project_support_golang %}
      - name: Setup GO
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.2'
          cache: true
{%- raw %}
      - run: "git config --global url.'https://jlec:${{ secrets.PAT_GITHUB_TOKEN }}@github.com/'.insteadOf git@github.com:"
      # yamllint disable-line rule:line-length
      - run: "git config --global url.'https://jlec:${{ secrets.PAT_GITHUB_TOKEN }}@github.com/'.insteadOf 'https://github.com/'"
      - run: "git config --global url.'https://'.insteadOf git://"
      - run: "git config --global user.name jlec"
{%- endraw %}
      - name: Release GO code
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.PAT_GITHUB_TOKEN }}{% endraw %}
{% endif %}
      - name: Cleanup action status
        uses: ouzi-dev/commit-status-updater@v2
        with:
          status: "success"
          token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          name: {% raw %}"GithubActions - ${GITHUB_WORKFLOW}"{% endraw %}
          ignoreForks: true
