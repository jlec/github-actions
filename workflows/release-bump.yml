---
name: Release Bump

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  gatekeeper:
    name: gatekeeper
    if: >-
      !startsWith(github.event.head_commit.message, 'bump:') &&
      !startsWith(github.event.head_commit.message, 'WIP')
    runs-on: ubuntu-latest
    steps:
      - name: Dummy
        run: echo "Run Pre-commit now"
{% include ".github/workflows/templates/pre-commit.yml" %}
  license-year:
    name: "Fix license year"
    needs:
      - gitleaks
      - pre-commit
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Update License year
        uses: FantasticFiasco/action-update-license-year@v2
        with:
          token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          assignees: jlec
          labels: license,year
      - name: Merge PR
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: >-
          if [[ $(gh pr list --label license,year --json number -q .[].number | wc -l) -gt 0 ]]; then
          gh pr merge --rebase --delete-branch;
          fi
  commitizen-bump:
    name: "Bump version and create changelog with commitizen"
    needs: license-year
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: {% raw %}"${{ secrets.PAT_GITHUB_TOKEN }}"{% endraw %}
      - name: Create bump and changelog
        id: cz
        uses: commitizen-tools/commitizen-action@0.16.0
        with:
          github_token: {% raw %}${{ secrets.PAT_GITHUB_TOKEN }}{% endraw %}
          increment: PATCH
          changelog_increment_filename: body.md
      - name: Release on Github
        uses: softprops/action-gh-release@v1
        with:
          body_path: "body.md"
          tag_name: {% raw %}${{ env.REVISION }}{% endraw %}
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
      - name: Print Version
        run: echo "Bumped to version {% raw %}${{ steps.cz.outputs.version }}"{% endraw %}
