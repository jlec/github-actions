---
name: GO Releaser

# yamllint disable-line rule:truthy
on:
  workflow_call:
    secrets:
      gpg_release_key:
        required: true
      pat:
        required: true
      tfe_release_token:
        required: true
      github-token:
        required: true

jobs:
  goreleaser:
    name: goreleaser
    runs-on: ubuntu-latest
    # trunk-ignore(checkov/CKV2_GHA_1)
    permissions:
      contents: write
      statuses: write
    env:
      GOPRIVATE: github.com/go-jlec
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}
      - name: Setup GO
        uses: actions/setup-go@v5
        with:
          cache: true
          go-version-file: "go.mod"
      - run: "git config --global url.'https://jlec:${{ secrets.pat }}@github.com/'.insteadOf git@github.com:"
      - run: "git config --global url.'https://jlec:${{ secrets.pat }}@github.com/'.insteadOf 'https://github.com/'"
      - run: "git config --global url.'https://'.insteadOf git://"
      - run: "git config --global user.name jlec"
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.gpg_release_key }}
      - name: Release GO code
        uses: goreleaser/goreleaser-action@v6
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.pat }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
      - name: Release on TFC
        run: if [[ -e tools/release.py ]]; then cd tools && ./release.py; fi
        env:
          GITHUB_TOKEN: ${{ secrets.pat }}
          TFE_TOKEN: ${{ secrets.tfe_release_token }}
      - name: Cleanup action status
        uses: ouzi-dev/commit-status-updater@v2
        with:
          status: "success"
          token: ${{ secrets.github-token }}
          name: "GithubActions - ${GITHUB_WORKFLOW}"
          ignoreForks: true
