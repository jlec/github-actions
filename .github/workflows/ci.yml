---
name: Continuous Integration

# yamllint disable-line rule:truthy
on:
  # yamllint disable-line rule:empty-values
  workflow_dispatch:

  # yamllint disable-line rule:empty-values
  push:
    branches:
      - "*"
    tags-ignore:
      - "**"

permissions: read-all

jobs:
  ###############################################################################
  #
  # Run on everything but Releases and WIP
  #
  ###############################################################################
  trigger-pre-commit:
    if: >-
      !startsWith(github.event.head_commit.message, 'bump:') &&
      !startsWith(github.event.head_commit.message, 'WIP')
    runs-on: ubuntu-latest
    steps:
      - name: Write Output
        run: echo "### Triggering workflow! :rocket:" >> $GITHUB_STEP_SUMMARY
  pre-commit:
    name: "Run Pre-commit against all files"
    needs:
      - trigger-pre-commit
    uses: jlec/github-actions/.github/workflows/reusable-pre-commit.yml@main
  gitleaks:
    name: "Run GitLeaks"
    needs:
      - trigger-pre-commit
    uses: jlec/github-actions/.github/workflows/reusable-gitleaks.yml@main
  summary-pre-commit:
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      - gitleaks
    steps:
      - name: Write summary
        run: echo "#### Finished Pre-commit" >> $GITHUB_STEP_SUMMARY

  ###############################################################################
  #
  # Run on "main" branch pushes
  #
  ###############################################################################
  trigger-main:
    if: >-
      ${{ github.ref_name == 'main' }} &&
      !startsWith(github.event.head_commit.message, 'bump:') &&
      !startsWith(github.event.head_commit.message, 'WIP')
    runs-on: ubuntu-latest
    needs:
      - summary-pre-commit
    steps:
      - name: Write Output
        run: echo "### Triggering workflow! :rocket:" >> $GITHUB_STEP_SUMMARY
  # go-build-test:
  #   name: "GO Build & Test"
  #   needs:
  #     - trigger-main
  #   uses: jlec/github-actions/.github/workflows/reusable-ci-go.yml@main
  license-year:
    name: "Fix license year"
    needs:
      # - go-build-test
      - trigger-main
    uses: jlec/github-actions/.github/workflows/reusable-license-year.yml@main
    permissions:
      contents: write
      pull-requests: write
  commitizen-bump:
    name: "Bump version and create changelog with commitizen"
    needs:
      - license-year
    uses: jlec/github-actions/.github/workflows/reusable-commitizen-bump.yml@main
    permissions:
      contents: write
    secrets:
      pat: ${{ secrets.PAT_GITHUB_TOKEN }}
      token: ${{ secrets.GITHUB_TOKEN }}
  summary-main:
    runs-on: ubuntu-latest
    needs:
      - commitizen-bump
    steps:
      - name: Write summary
        run: echo "#### Finished Main" >> $GITHUB_STEP_SUMMARY

  ###############################################################################
  #
  # Run on pull requests
  #
  ###############################################################################
  trigger-pr:
    if: >-
      ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Write Output
        run: echo "### Triggering workflow! :rocket:" >> $GITHUB_STEP_SUMMARY
    needs:
      - summary-pre-commit
  automerge:
    name: Merge PR
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs:
      - trigger-pr
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.5.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor,patch
  summary-pr:
    runs-on: ubuntu-latest
    needs:
      - automerge
    steps:
      - name: Write summary
        run: echo "#### Finished PR" >> $GITHUB_STEP_SUMMARY

  ###############################################################################
  #
  # Finish CI
  #
  ###############################################################################
  finish-ci:
    name: Finish CI
    runs-on: ubuntu-latest
    needs:
      - summary-pre-commit
      - summary-main
      # - summary-pr
    steps:
      - name: Write summary
        run: echo "#### Finished CI" >> $GITHUB_STEP_SUMMARY
