---
name: Release Bump

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  gatekeeper:
    name: gatekeeper
    if: >-
      !startsWith(github.event.head_commit.message, 'bump:') &&
      !startsWith(github.event.head_commit.message, 'WIP')
    runs-on: ubuntu-latest
    steps:
      - name: Dummy
        run: echo "Run Pre-commit now"
  pre-commit:
    name: "Run Pre-commit against all files"
    runs-on: ubuntu-latest
    needs:
      - gatekeeper
    env:
      ANSIBLE_COLLECTIONS_PATH: /home/runner/.ansible/collections:/usr/share/ansible/collections
      ANSIBLE_ROLES_PATH: /home/runner/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles
      PY_RUNNER: ""
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          # Set up to your needs
          # cache:
          python-version: ">=3.10"
      - name: Install GO
        uses: actions/setup-go@v3
        with:
          # Enable of go.sum is present
          # cache: true
          go-version: ">=1.19.0"
      - name: Install shfmt
        run: go install mvdan.cc/sh/v3/cmd/shfmt@latest
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Install ansible deps in deployment
        run: "if [[ -d deployment ]]; then cd deployment && task ansible-init; fi"
      - name: Install ansible deps in packer
        run: "if [[ -d packer ]]; then cd packer && task ansible-init; fi"
      - name: Install ansible deps
        run: "task ansible-init"
      - name: Run pre-commit against all files
        uses: pre-commit/action@v3.0.0
        env:
          # yamllint disable-line rule:line-length
          SKIP: detect-aws-credentials,protect-first-parent,terraform_docs,terraform_providers_lock,terraform_tflint,terraform_tfsec,terraform_checkov,terrascan
  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  license-year:
    name: "Fix license year"
    needs:
      - gitleaks
      - pre-commit
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Update License year
        uses: FantasticFiasco/action-update-license-year@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          assignees: jlec
          labels: license,year
      - name: Merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          if [[ $(gh pr list --label license,year --json number -q .[].number | wc -l) -gt 0 ]]; then
          gh pr merge --rebase --delete-branch;
          fi
  commitizen-bump:
    name: "Bump version and create changelog with commitizen"
    needs: license-year
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.PAT_GITHUB_TOKEN }}"
      - name: Create bump and changelog
        id: cz
        uses: commitizen-tools/commitizen-action@0.16.0
        with:
          github_token: ${{ secrets.PAT_GITHUB_TOKEN }}
          increment: PATCH
          changelog_increment_filename: body.md
      - name: Release on Github
        uses: softprops/action-gh-release@v1
        with:
          body_path: "body.md"
          tag_name: ${{ env.REVISION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"
